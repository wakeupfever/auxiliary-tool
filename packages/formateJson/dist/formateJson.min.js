!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):(e="undefined"!=typeof globalThis?globalThis:e||self).FormateJson=r()}(this,function(){"use strict";function e(){}return e.prototype.deepJson=function(e,r,n){if(void 0===n&&(n=[]),!e.length)return[];for(var t=e.length,o=0;o<t;o++){var i=e[o],s=r(i);n.push(s),i.childArea.length&&this.deepJson(i.childArea,r,n)}return n},e.prototype.synchronizeAttr=function(t,o,i){if(!t)throw Error;var e,s={};for(e in t)!function(r){var e=t[r],n=o.findIndex(function(e){return e===r});-1===n||(s[i[n]]=e)}(e);return s},e.prototype.init=function(e,r){if(void 0===e&&(e=[]),void 0===r&&(r={target:"addressTreePCD",oldKey:["childArea","areaName","areaCode"],newKey:["children","label","value"]}),!Array.isArray(e))throw Error("json is not array");var n=r.target,t=r.oldKey,r=r.newKey,n=n.charAt(0).toUpperCase()+n.slice(1);console.time();r=this["handle"+n](e,t,r);return console.timeEnd(),r},e.prototype.handleAddressTreePCD=function(e,r,n,t){var o=this;if(!Array.isArray(e))throw Error("json is not array");return r.length!==n.length&&(console.log("旧的key 不等于 新的key"),process.exit(0)),this.deepJson(e,function(e){return o.synchronizeAttr(e,r,n)})},e.selfName="formateJson",e});
